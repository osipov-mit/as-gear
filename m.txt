
> transformer:build

[2K[1G[1myarn run v1.22.17[22m
[2K[1G[2m$ rm -rf dist && tsc[22m
[2K[1GDone in 0.71s.

 

 >  Lerna (powered by Nx)   Successfully ran target build for project transformer



> struct:"asbuild:debug"

[2K[1G[1myarn run v1.22.17[22m
[2K[1G[2m$ asc assembly/index.ts --target debug --transform ../../transformer/dist/transformer.js[22m
xr {
  kind: 1,
  range: ae {
    start: 263,
    end: 281,
    debugInfoRef: 0,
    source: vn {
      kind: 0,
      range: [ae],
      sourceKind: 0,
      normalizedPath: 'assembly/io.ts',
      text: "import { CodecClass, Option, Result, ScaleString, U32, U8 } from 'as-scale-codec/assembly';\n" +
        "import { InOut, MetadataRepr } from 'as-gear-std/assembly';\n" +
        '\n' +
        '//@ts-ignore\n' +
        '@codec\n' +
        '//@ts-ignore\n' +
        '@struct\n' +
        '//@ts-ignore\n' +
        '@typeInfo\n' +
        'class MyStruct extends CodecClass {\n' +
        '  field1: ScaleString | null;\n' +
        '  field2: Result<U8, ScaleString> | null;\n' +
        '\n' +
        '  constructor(f1: ScaleString | null = null, f2: Result<U8, ScaleString> | null = null) {\n' +
        '    super();\n' +
        '    this.field1 = f1;\n' +
        '    this.field2 = f2;\n' +
        '  }\n' +
        '\n' +
        '  static decode(value: Uint8Array): MyStruct {\n' +
        '    const result = new MyStruct();\n' +
        '    result.decode(value);\n' +
        '    return result;\n' +
        '  }\n' +
        '}\n' +
        '\n' +
        'export { MyStruct };\n' +
        '\n' +
        '// @ts-ignore: decorator\n' +
        '@metadata\n' +
        'export class ProgramMetadata implements MetadataRepr {\n' +
        '  init: InOut<MyStruct, MyStruct>;\n' +
        '  handle: InOut<ScaleString, U8>;\n' +
        '  reply: InOut<null, null>;\n' +
        '  others: InOut<null, null>;\n' +
        '  signal: null;\n' +
        '  state: null;\n' +
        '}\n',
      statements: [Array],
      debugInfoIndex: -1,
      exportPaths: null,
      lineCache: null,
      lineColumn: 1,
      internalPath: 'assembly/io',
      simplePath: 'io'
    }
  },
  isNullable: true,
  currentlyResolving: false,
  name: hi {
    kind: 3,
    range: ae { start: 263, end: 274, debugInfoRef: 0, source: [vn] },
    identifier: Xe { kind: 6, range: [ae], text: 'ScaleString', isQuoted: false },
    next: null
  },
  typeArguments: []
}
xr {
  kind: 1,
  range: ae {
    start: 293,
    end: 323,
    debugInfoRef: 0,
    source: vn {
      kind: 0,
      range: [ae],
      sourceKind: 0,
      normalizedPath: 'assembly/io.ts',
      text: "import { CodecClass, Option, Result, ScaleString, U32, U8 } from 'as-scale-codec/assembly';\n" +
        "import { InOut, MetadataRepr } from 'as-gear-std/assembly';\n" +
        '\n' +
        '//@ts-ignore\n' +
        '@codec\n' +
        '//@ts-ignore\n' +
        '@struct\n' +
        '//@ts-ignore\n' +
        '@typeInfo\n' +
        'class MyStruct extends CodecClass {\n' +
        '  field1: ScaleString | null;\n' +
        '  field2: Result<U8, ScaleString> | null;\n' +
        '\n' +
        '  constructor(f1: ScaleString | null = null, f2: Result<U8, ScaleString> | null = null) {\n' +
        '    super();\n' +
        '    this.field1 = f1;\n' +
        '    this.field2 = f2;\n' +
        '  }\n' +
        '\n' +
        '  static decode(value: Uint8Array): MyStruct {\n' +
        '    const result = new MyStruct();\n' +
        '    result.decode(value);\n' +
        '    return result;\n' +
        '  }\n' +
        '}\n' +
        '\n' +
        'export { MyStruct };\n' +
        '\n' +
        '// @ts-ignore: decorator\n' +
        '@metadata\n' +
        'export class ProgramMetadata implements MetadataRepr {\n' +
        '  init: InOut<MyStruct, MyStruct>;\n' +
        '  handle: InOut<ScaleString, U8>;\n' +
        '  reply: InOut<null, null>;\n' +
        '  others: InOut<null, null>;\n' +
        '  signal: null;\n' +
        '  state: null;\n' +
        '}\n',
      statements: [Array],
      debugInfoIndex: -1,
      exportPaths: null,
      lineCache: null,
      lineColumn: 1,
      internalPath: 'assembly/io',
      simplePath: 'io'
    }
  },
  isNullable: true,
  currentlyResolving: false,
  name: hi {
    kind: 3,
    range: ae { start: 293, end: 299, debugInfoRef: 0, source: [vn] },
    identifier: Xe { kind: 6, range: [ae], text: 'Result', isQuoted: false },
    next: null
  },
  typeArguments: [
    xr {
      kind: 1,
      range: [ae],
      isNullable: false,
      currentlyResolving: false,
      name: [hi],
      typeArguments: []
    },
    xr {
      kind: 1,
      range: [ae],
      isNullable: false,
      currentlyResolving: false,
      name: [hi],
      typeArguments: []
    }
  ]
}
[2K[1GDone in 0.74s.

 

 >  Lerna (powered by Nx)   Successfully ran target asbuild:debug for project struct


-rw-r--r--  1 dmitriiosipov  staff  16432 Jun 15 17:08 build/struct.debug.cannon.size-opt.wasm
-rw-r--r--  1 dmitriiosipov  staff  32120 Jun 15 17:08 build/struct.debug.cannon.wasm
-rw-r--r--  1 dmitriiosipov  staff  12813 Jun 15 17:08 build/struct.debug.opt.wasm
-rw-r--r--  1 dmitriiosipov  staff  31954 Jun 15 17:08 build/struct.debug.wasm
-rw-r--r--  1 dmitriiosipov  staff  15723 Jun 12 12:02 build/struct.wasm
